#!/bin/sh
LAMP_Install(){
	apt install apache2 -y
	apt install apache2 apache2-utils -y
	apt install lynx -y
	systemctl restart apache2 #This is here to insure that the web server is working properly after being installed
	apt install chromium-browser -y
	apt install mariadb-server mariadb-client -y

	apt install php -y
	a2enmod php8.1
	systemctl restart apache2
	cd /var/www/html
	file="phpinfo.php"
	echo "<?php phpinfo(); ?>" > $file #This writes a phpinfo file 
	
}

TREE_DirectoryStructure(){
	apt install tree 
	cd 
	cd /home #A folder called home will always exist no matter the username 
	tree


}


Generate_Password(){
	#This will generate a password for the user based on their username and the date
	echo "Generating password... "
	PWORD1="$(whoami)" #The first half of the password will be the user's name
	TIME=`date '+%F_%H:%M:%S'`
	PASSWORD=$PWORD1$TIME
	read -p "Please enter your username: " USERNAME #This is used to get round the issue of root not having a desktop
	echo "THIS PASSWORD IS STORED IN A FILE CALLED 'PASSWORD' ON YOUR USER DOCUMENTS"
	cd
	cd /home/$USERNAME
	PWordFile="Password.txt"
	echo "$PASSWORD" > $PWordFile
	cat $PWordFile #This will show what is inside the file



}

echo ENSURE YOU ARE A ROOT USER BEFORE USING THIS BASH SCRIPT
echo "Updating system"
	apt update -y
	apt upgrade -y
choice = "Y"

while [ $choice=="Y" ]
do
	echo ""
	echo ""
	echo "List of tasks available: "
	echo ""
	echo "Install LAMP stack (All tools needed to host a website locally) - Enter 'LAMP' to install LAMP stack"
	echo ""
	echo "Show directory structure - Enter 'TREE' to install and show directory structure"
	echo ""
	echo "Generate password to use if you dont have one - enter 'PASS' to generate a password"
	echo ""

	#This command reads what the user enters and stores it in the value TASK
	read -p "Please enter task you would like to be performed: " TASK 
		case $TASK in #This command tells the terminal what to do depending on what is entered
			"LAMP") LAMP_Install ;;
			"lamp") LAMP_Install ;; #This is so the user can type it in lower case if they wish to
			"TREE") TREE_DirectoryStructure ;;
			"tree") TREE_DirectoryStructure ;;
			"PASS") Generate_Password ;;
			"pass") Generate_Password ;;

		esac

	echo ""
	echo ""
	read -p "Please enter 'Y' if you would like to perform another task or enter anything else if you would like to quit: " decision
		if [ $decision != "Y" ] #This will get the user out of the while loop if they do not select Y
		then
			break
		else
			echo ""
		fi
done